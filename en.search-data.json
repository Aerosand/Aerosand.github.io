{"/about/":{"data":{"":"This is a space for sharing and discussion on numerical calculation, CFD, OpenFOAM and more.\nnight test"},"title":"About"},"/docs/":{"data":{"":"👋 Hello! Welcome to the Aerosand documentation!!!"},"title":"Documentation"},"/docs/getting-started/":{"data":{"":"这是一个测试。","next#Next":"Explore the following sections to start adding more contents:\nOrganize Files Configuration Markdown ","quick-start-from-template#Quick Start from Template":" imfing/hextra-starter-template\nYou could quickly get started by using the above template repository.\nWe have provided a GitHub Actions workflow which can help automatically build and deploy your site to GitHub Pages, and host it for free. For more options, check out Deploy Site.\n🌐 Demo ↗","start-as-new-project#Start as New Project":"There are two main ways to add the Hextra theme to your Hugo project:\nHugo Modules (Recommended): The simplest and recommended method. Hugo modules let you pull in the theme directly from its online source. Theme is downloaded automatically and managed by Hugo.\nGit Submodule: Alternatively, add Hextra as a Git Submodule. The theme is downloaded by Git and stored in your project’s themes folder.\nSetup Hextra as Hugo module Prerequisites Before starting, you need to have the following software installed:\nHugo (extended version) Git Go Steps Initialize a new Hugo site hugo new site my-site --format=yaml Configure Hextra theme via module # initialize hugo module cd my-site hugo mod init github.com/username/my-site # add Hextra theme hugo mod get github.com/imfing/hextra Configure hugo.yaml to use Hextra theme by adding the following:\nmodule: imports: - path: github.com/imfing/hextra Create your first content pages Create new content page for the home page and the documentation page:\nhugo new content/_index.md hugo new content/docs/_index.md Preview the site locally hugo server --buildDrafts --disableFastRender Voila, your new site preview is available at http://localhost:1313/.\nHow to update theme? To update all Hugo modules in your project to their latest versions, run the following command:\nhugo mod get -u To update Hextra to the latest released version, run the following command:\nhugo mod get -u github.com/imfing/hextra See Hugo Modules for more details.\nSetup Hextra as Git submodule Prerequisites Before starting, you need to have the following software installed:\nHugo (extended version) Git Steps Initialize a new Hugo site hugo new site my-site --format=yaml Add Hextra theme as a Git submodule git submodule add https://github.com/imfing/hextra.git themes/hextra Configure hugo.yaml to use Hextra theme by adding the following:\ntheme: hextra Create your first content pages Create new content page for the home page and the documentation page:\nhugo new content/_index.md hugo new content/docs/_index.md Preview the site locally hugo server --buildDrafts --disableFastRender Your new site preview is available at http://localhost:1313/.\nWhen using CI/CD for Hugo website deployment, it’s essential to ensure that the following command is executed before running the hugo command.\ngit submodule update --init Failure to run this command results in the theme folder not being populated with Hextra theme files, leading to a build failure.\nHow to update theme? To update all submodules in your repository to their latest commits, run the following command:\ngit submodule update --remote To update Hextra to the latest commit, run the following command:\ngit submodule update --remote themes/hextra See Git submodules for more details."},"title":"getting-started"},"/docs/ofsb/":{"data":{"":"Hugo Shortcodes are simple snippets inside your content files calling built-in or custom templates.\nHextra provides a collection of beautiful shortcodes to enhance your content.\nCallout Cards Details FileTree Icon Steps Tabs Additional shortcodes provided by Hugo and Hextra:\nJupyter Notebook alpha Others "},"title":"ofsb"},"/docs/ofsp/":{"data":{"":" Important\n访问 https://aerosand.cc 以获取最近更新。","1前置#1.前置":"本系列旨在帮助读者衔接“CFD 理论”和“OpenFOAM 入门实践”两个部分。\nWarning\n建议先学习计算流体力学基础以及有限体积法，之后再开始本系列的学习。","2介绍#2.介绍":"OpenFOAM 是什么呢？引用 wiki 解释如下\nOpenFOAM (for “Open-source Field Operation And Manipulation”) is a C++ toolbox for the development of customized numerical solvers, and pre-/post-processing utilities for the solution of continuum mechanics problems, most prominently including computational fluid dynamics (CFD).\n所以我们可以使用 OpenFOAM 来构建基于 C++ 的实现 CFD 等理论的求解器应用。","3环境和工具#3.环境和工具":"鉴于 OpenFOAM 的使用环境，我们选择在 ubuntu 24.04 系统环境中，基于 OpenFOAM 2406 版本进行开发讨论，方便起见使用 vscode 工具。\nCaution\nopenfoam.com 的版本变化较小，较新的版本均适合本系列讨论使用 openfoam.org 的版本架构大改，暂不推荐入门 ","3路线#3.路线":"我们从简单的 C++ 程序实现开始，简单了解编译原理，通过 makefile 逐渐掌控我们的项目，过渡到了解 OpenFOAM 的 make 实现方式，然后认识 OpenFOAM 的基本程序，然后逐渐深入了解 OpenFOAM 的求解器应用细节。\n编译原理 C++ 程序的编译 makefile 管理程序编译 wmake 管理程序编译 OpenFOAM 应用构建 数据交互 输入输出 命令行参数 基础类 时间 网格 场 求解器 开发库 第一个求解器 算法初见 SIMPLE \u0026 PISO \u0026 PIMPLE 算法 SIMPLE 求解器 Note\n每个部分都会有详细的代码和操作解释。","4建议#4.建议":" Tip\n建议读者动手跟随讨论编程操作 "},"title":"ofsp"},"/docs/ofsp/01_introduction/":{"data":{"":" Important\n访问 https://aerosand.cc 以获取最近更新。","1前置#1.前置":"本系列旨在帮助读者衔接“CFD 理论”和“OpenFOAM 入门实践”两个部分。\nWarning\n建议先学习计算流体力学基础以及有限体积法，之后再开始本系列的学习。","2介绍#2.介绍":"OpenFOAM 是什么呢？引用 wiki 解释如下\nOpenFOAM (for “Open-source Field Operation And Manipulation”) is a C++ toolbox for the development of customized numerical solvers, and pre-/post-processing utilities for the solution of continuum mechanics problems, most prominently including computational fluid dynamics (CFD).\n所以我们可以使用 OpenFOAM 来构建基于 C++ 的实现 CFD 等理论的求解器应用。","3环境和工具#3.环境和工具":"鉴于 OpenFOAM 的使用环境，我们选择在 ubuntu 24.04 系统环境中，基于 OpenFOAM 2406 版本进行开发讨论，方便起见使用 vscode 工具。\nCaution\nopenfoam.com 的版本变化较小，较新的版本均适合本系列讨论使用 openfoam.org 的版本架构大改，暂不推荐入门 ","3路线#3.路线":"我们从简单的 C++ 程序实现开始，简单了解编译原理，通过 makefile 逐渐掌控我们的项目，过渡到了解 OpenFOAM 的 make 实现方式，然后认识 OpenFOAM 的基本程序，然后逐渐深入了解 OpenFOAM 的求解器应用细节。\n编译原理 C++ 程序的编译 makefile 管理程序编译 wmake 管理程序编译 OpenFOAM 应用构建 数据交互 输入输出 命令行参数 基础类 时间 网格 场 求解器 开发库 第一个求解器 算法初见 SIMPLE \u0026 PISO \u0026 PIMPLE 算法 SIMPLE 求解器 Note\n每个部分都会有详细的代码和操作解释。","4建议#4.建议":" Tip\n建议读者动手跟随讨论编程操作 "},"title":"01_introduction"},"/docs/ofsp/02_helloworld/":{"data":{"":"","1准备工作#1.准备工作":" Note\n对于 OpenFOAM 来说，不管是求解器还是算例，放在任何一个文件夹都可以。放在 $FOAM_RUN 路径下也是为了方便管理。\n我们约定\nuserPath/：用户指定路径，该路径下再新建例如 userPath/ofsp/ 文件夹，ofsp/ 下再新建各个项目 例如，新建总项目文件夹\n终端输入命令\nterminalmkdir /userPath/ofsp ofsp 即 OpenFoam sharing programming 的缩写\n我们可以将 ofsp 设置为快捷命令，终端输入 ofsp 后可以直接跳转到项目文件夹下。\n终端输入命令打开 bashrc 文件\nterminalgedit ~/.bashrc 在 bashrc 文件末尾添加一下语句\nbashrcalias ofsp='cd /userPath/ofsp' alias ofss='cd /userPath/ofss' 终端输入命令时使快捷命令生效\nterminalsource ~/.bashrc ","2项目#2.项目":"通过终端新建本文子项目的文件夹\nterminalofsp mkdir ofsp_021_helloWorld code ofsp_021_helloWorld 通过 vscode 打开项目后，可以使用 ctrl + ~ 唤出 vscode 的终端控制台，快捷进行命令操作。\n终端输入命令新建项目下文件，并空白保存\nterminalcode main.cpp Aerosand.cpp Aerosand.h 终端输入 tree 命令查看文件树状结构，显示如下\nterminaltree . ├── Aerosand.cpp ├── Aerosand.h └── main.cpp "},"title":"02_helloWorld"},"/docs/ofss/":{"data":{"":"Hugo Shortcodes are simple snippets inside your content files calling built-in or custom templates.\nHextra provides a collection of beautiful shortcodes to enhance your content.\nCallout Cards Details FileTree Icon Steps Tabs Additional shortcodes provided by Hugo and Hextra:\nJupyter Notebook alpha Others "},"title":"ofss"},"/news/":{"data":{"":" RSS Feed "},"title":"News"}}